name: my_rpg

on:
  push:

env:
  EXECUTABLES: my_rpg

jobs:
  check_program_compilation:
    name: Checking that the program compiles correctly
    runs-on: ubuntu-latest
    container:
      image: epitechcontent/epitest-docker
    timeout-minutes: 10
    steps:
      - name: Discord Notification
        uses: appleboy/discord-action@v0.2.0
        with:
          webhook_id: 1098645970016800878
          webhook_token: "-ApcSsSQy-Wg-EoDkAEk-EN0xaMw3FxLdiF8to16UmDEMt6TtklgTgeW2NFB-RYPo9dG"
          message: "Workflow '${{ github.workflow }}' ${{ job.status }} on branch '${{ github.ref }}'."
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Make
        run: make
      - name: Make clean
        run: make clean
      - name: Verify is files exists and is executable
        run: |
          for exe in $(echo $EXECUTABLES | tr ',' ' ');
            do
            if [ ! -x $exe ];
              then exit 1;
            fi;
            done;
            exit 0;

  check_coding_style:
    name: Checking the coding style
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/epitech/coding-style-checker:latest
    timeout-minutes: 10
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Check the coding style
        run: |
          check.sh $(pwd) $(pwd);
          if [ -s coding-style-reports.log ];
            then while read line;
              do
              type=$(echo $line | awk -F ":" '{print $3}');
              file=$(echo $line | awk -F ":" '{print $1}' | sed 's/^.\///');
              nb_line=$(echo $line | awk -F ":" '{print $2}');
              error=$(echo $line | awk -F ":" '{print $4}');
              echo "::error ,title=$type coding style error,file=$file,line=$nb_line:: $error";
              done < coding-style-reports.log;
            exit 1;
          fi;
          exit 0;

  run_tests:
    name: Running tests
    runs-on: ubuntu-latest
    container:
      image: epitechcontent/epitest-docker
    timeout-minutes: 10
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Execute tests
        run: make tests_run
      - name : Verify if there is failure test
        run: ./tests/binary_test
        if: ${{ failure() }}
          exit 1
